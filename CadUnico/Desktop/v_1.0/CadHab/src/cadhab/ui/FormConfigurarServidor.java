/*
 * Classe pertencente ao módulo de GUI do sistema "CadHab".
 */
package cadhab.ui;

/**
 *
 * @author William Oliveira
 * 
 * @version 1.0
 */
public class FormConfigurarServidor extends javax.swing.JFrame {
    
    private boolean done;

    /**
     * Creates new form FormConfigurarServidor
     */
    public FormConfigurarServidor() {
        
        initComponents();
        setLocationRelativeTo(null);
        done = false;
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jbtngServidor = new javax.swing.ButtonGroup();
        jpnlPrincipal = new javax.swing.JPanel();
        jlblServidor = new javax.swing.JLabel();
        jrdbLocal = new javax.swing.JRadioButton();
        jrdbRemoto = new javax.swing.JRadioButton();
        jtxtServidor = new javax.swing.JTextField();
        jlblPorta = new javax.swing.JLabel();
        jtxtPorta = new javax.swing.JTextField();
        jlblProtocolo = new javax.swing.JLabel();
        jcbbProtocolo = new javax.swing.JComboBox();
        jsepRodape = new javax.swing.JSeparator();
        jbtnSalvar = new javax.swing.JButton();
        jbtnCancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("CadHab - Configurações do Servidor");
        setResizable(false);

        jpnlPrincipal.setLayout(null);

        jlblServidor.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jlblServidor.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jlblServidor.setText("Servidor:");
        jlblServidor.setToolTipText("Servidor do CadHab");
        jpnlPrincipal.add(jlblServidor);
        jlblServidor.setBounds(10, 10, 70, 25);

        jbtngServidor.add(jrdbLocal);
        jrdbLocal.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jrdbLocal.setSelected(true);
        jrdbLocal.setText("Local");
        jrdbLocal.setToolTipText("O Servidor Está Instalado Neste Computador");
        jrdbLocal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrdbLocalActionPerformed(evt);
            }
        });
        jpnlPrincipal.add(jrdbLocal);
        jrdbLocal.setBounds(90, 10, 80, 23);

        jbtngServidor.add(jrdbRemoto);
        jrdbRemoto.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jrdbRemoto.setText("Remoto");
        jrdbRemoto.setToolTipText("O Servidor Está Instalado em Outro Computador");
        jrdbRemoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrdbRemotoActionPerformed(evt);
            }
        });
        jpnlPrincipal.add(jrdbRemoto);
        jrdbRemoto.setBounds(190, 10, 100, 23);

        jtxtServidor.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtxtServidor.setText("localhost");
        jtxtServidor.setEnabled(false);
        jtxtServidor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtServidorKeyPressed(evt);
            }
        });
        jpnlPrincipal.add(jtxtServidor);
        jtxtServidor.setBounds(90, 40, 300, 25);

        jlblPorta.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jlblPorta.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jlblPorta.setText("Porta:");
        jlblPorta.setToolTipText("Porta de Conexão Com o Servidor");
        jpnlPrincipal.add(jlblPorta);
        jlblPorta.setBounds(10, 70, 70, 25);

        jtxtPorta.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtxtPorta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtPortaKeyPressed(evt);
            }
        });
        jpnlPrincipal.add(jtxtPorta);
        jtxtPorta.setBounds(90, 70, 300, 25);

        jlblProtocolo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jlblProtocolo.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jlblProtocolo.setText("Protocolo:");
        jlblProtocolo.setToolTipText("Protocolo de Comunicação entre a Aplicação e o Servidor");
        jpnlPrincipal.add(jlblProtocolo);
        jlblProtocolo.setBounds(10, 100, 70, 25);

        jcbbProtocolo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jcbbProtocolo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "http", "https" }));
        jcbbProtocolo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbbProtocoloItemStateChanged(evt);
            }
        });
        jpnlPrincipal.add(jcbbProtocolo);
        jcbbProtocolo.setBounds(90, 100, 300, 25);
        jpnlPrincipal.add(jsepRodape);
        jsepRodape.setBounds(10, 140, 380, 2);

        jbtnSalvar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbtnSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cadhab/ui/icon/save.png"))); // NOI18N
        jbtnSalvar.setText("Salvar");
        jbtnSalvar.setToolTipText("Salvar Dados");
        jbtnSalvar.setIconTextGap(10);
        jbtnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnSalvarActionPerformed(evt);
            }
        });
        jpnlPrincipal.add(jbtnSalvar);
        jbtnSalvar.setBounds(140, 150, 120, 30);

        jbtnCancelar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbtnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cadhab/ui/icon/cancel.png"))); // NOI18N
        jbtnCancelar.setText("Cancelar");
        jbtnCancelar.setToolTipText("Fechar Esta Janela");
        jbtnCancelar.setIconTextGap(10);
        jbtnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnCancelarActionPerformed(evt);
            }
        });
        jpnlPrincipal.add(jbtnCancelar);
        jbtnCancelar.setBounds(270, 150, 120, 30);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpnlPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpnlPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jrdbRemotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrdbRemotoActionPerformed
        
        jtxtServidor.setText("");
        jtxtServidor.setEnabled(true);
        done = false;
        
    }//GEN-LAST:event_jrdbRemotoActionPerformed

    private void jrdbLocalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrdbLocalActionPerformed
        
        jtxtServidor.setText("localhost");
        jtxtServidor.setEnabled(false);
        done = false;
        
    }//GEN-LAST:event_jrdbLocalActionPerformed

    private void jbtnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnSalvarActionPerformed
        
        java.lang.String server = jtxtServidor.getText();
        java.lang.String port = jtxtPorta.getText();
        java.lang.String protocol = jcbbProtocolo.getSelectedItem().toString();
        
        if (! server.isEmpty() && ! port.isEmpty() && ! protocol.isEmpty()) {
            
            java.lang.Object[] options = {"Sim", "Não"};
            java.lang.Object opcao = javax.swing.JOptionPane.showOptionDialog(this, "Deseja realmente salvar as alterações da configuração do servidor?", "Confirmação",
                    javax.swing.JOptionPane.DEFAULT_OPTION, javax.swing.JOptionPane.QUESTION_MESSAGE, null,
                    options, options[1]);
            
            if (opcao.toString().equals("0")) {
            
                com.server.ServerConfig serverCfg = new com.server.ServerConfig(com.sys.SystemSettings.systemPath);

                if (serverCfg.setServerConfiguration(server, port, protocol) == 1) {

                    javax.swing.JOptionPane.showMessageDialog(null, "As configurações do servidor foram salvas com sucesso!\nReinicie o CadHab para carregar as novas configurações.", "Sucesso", 1);
                    done = true;
                    this.dispose();

                } else {

                    javax.swing.JOptionPane.showMessageDialog(null, "Não foi possível salvar as configurações do servidor.\nContate o administrador do sistema!", "Erro", 0);
                    done = false;

                }
            
            }
        
        } else {
            
            javax.swing.JOptionPane.showMessageDialog(null, "Todos os campos precisam estar preenchidos ou selecionados para prosseguir!", "Alerta", 2);
            
        }
        
    }//GEN-LAST:event_jbtnSalvarActionPerformed

    private void jbtnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnCancelarActionPerformed
        
        if (done) {
            
            System.exit(0);
        
        } else {
            
            java.lang.Object[] options = {"Sim", "Não"};
            java.lang.Object opcao = javax.swing.JOptionPane.showOptionDialog(this, "Os dados do arquivo de configuração do servidor ainda não foram salvos!\nDeseja realmente fechar esta janela?", "Confirmação",
                    javax.swing.JOptionPane.DEFAULT_OPTION, javax.swing.JOptionPane.QUESTION_MESSAGE, null,
                    options, options[1]);
            
            if (opcao.toString().equals("0")) {
                
                System.exit(0);
                
            }
            
        }
        
    }//GEN-LAST:event_jbtnCancelarActionPerformed

    private void jtxtServidorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtServidorKeyPressed
        
        done = false;
        
    }//GEN-LAST:event_jtxtServidorKeyPressed

    private void jtxtPortaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtPortaKeyPressed
        
        done = false;
        
    }//GEN-LAST:event_jtxtPortaKeyPressed

    private void jcbbProtocoloItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbbProtocoloItemStateChanged
        
        done = false;
        
    }//GEN-LAST:event_jcbbProtocoloItemStateChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jbtnCancelar;
    private javax.swing.JButton jbtnSalvar;
    private javax.swing.ButtonGroup jbtngServidor;
    private javax.swing.JComboBox jcbbProtocolo;
    private javax.swing.JLabel jlblPorta;
    private javax.swing.JLabel jlblProtocolo;
    private javax.swing.JLabel jlblServidor;
    private javax.swing.JPanel jpnlPrincipal;
    private javax.swing.JRadioButton jrdbLocal;
    private javax.swing.JRadioButton jrdbRemoto;
    private javax.swing.JSeparator jsepRodape;
    private javax.swing.JTextField jtxtPorta;
    private javax.swing.JTextField jtxtServidor;
    // End of variables declaration//GEN-END:variables
}
