/*
 * Classe pertencente ao m√≥dulo de GUI do sistema "CadHab".
 */
package cadhab.ui;

/**
 *
 * @author William Oliveira
 * 
 * @version 1.0
 */
public class FormGerenciarRecursoSocial extends javax.swing.JInternalFrame {
    
    private char acao = ' ';

    /**
     * Creates new form FormGerenciarRecursoSocial
     */
    public FormGerenciarRecursoSocial() {
        
        initComponents();
        
        try {
            
            com.sys.SystemSettings.setSystemThemeNimbus();
            
        } catch (java.lang.Exception ex) {
            
            ex.printStackTrace();
            
        }
        
        resetarForm();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jsepPrincipal = new javax.swing.JScrollPane();
        jpnlPrincipal = new javax.swing.JPanel();
        jpnlTabelaPesquisa = new javax.swing.JPanel();
        jscpTabelaPesquisa = new javax.swing.JScrollPane();
        jtblPesquisa = new javax.swing.JTable();
        jlblNomeRecurso = new javax.swing.JLabel();
        jtxtNomeRecurso = new javax.swing.JTextField();
        jsepRodape = new javax.swing.JSeparator();
        jbtnNovo = new javax.swing.JButton();
        jbtnSalvar = new javax.swing.JButton();
        jbtnEditar = new javax.swing.JButton();
        jbtnLimpar = new javax.swing.JButton();
        jbtnExcluir = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setResizable(true);
        setTitle("CadHab - Gerenciamento de Recursos Sociais");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/cadhab/ui/icon/building.png"))); // NOI18N
        setMaximumSize(new java.awt.Dimension(700, 408));
        setMinimumSize(new java.awt.Dimension(0, 0));
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        jsepPrincipal.setAutoscrolls(true);
        jsepPrincipal.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jpnlPrincipal.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jpnlPrincipal.setLayout(null);

        jtblPesquisa.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtblPesquisa.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "", "Nome"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtblPesquisa.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jtblPesquisa.getTableHeader().setReorderingAllowed(false);
        jtblPesquisa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtblPesquisaMouseClicked(evt);
            }
        });
        jtblPesquisa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtblPesquisaKeyPressed(evt);
            }
        });
        jscpTabelaPesquisa.setViewportView(jtblPesquisa);
        jtblPesquisa.getColumnModel().getColumn(0).setResizable(false);
        jtblPesquisa.getColumnModel().getColumn(0).setMinWidth(0);
        jtblPesquisa.getColumnModel().getColumn(0).setPreferredWidth(0);
        jtblPesquisa.getColumnModel().getColumn(0).setMaxWidth(0);
        jtblPesquisa.getColumnModel().getColumn(1).setMinWidth(680);
        jtblPesquisa.getColumnModel().getColumn(1).setPreferredWidth(680);

        javax.swing.GroupLayout jpnlTabelaPesquisaLayout = new javax.swing.GroupLayout(jpnlTabelaPesquisa);
        jpnlTabelaPesquisa.setLayout(jpnlTabelaPesquisaLayout);
        jpnlTabelaPesquisaLayout.setHorizontalGroup(
            jpnlTabelaPesquisaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jscpTabelaPesquisa, javax.swing.GroupLayout.DEFAULT_SIZE, 660, Short.MAX_VALUE)
        );
        jpnlTabelaPesquisaLayout.setVerticalGroup(
            jpnlTabelaPesquisaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jscpTabelaPesquisa, javax.swing.GroupLayout.DEFAULT_SIZE, 260, Short.MAX_VALUE)
        );

        jpnlPrincipal.add(jpnlTabelaPesquisa);
        jpnlTabelaPesquisa.setBounds(10, 10, 660, 260);

        jlblNomeRecurso.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jlblNomeRecurso.setText("Nome:");
        jpnlPrincipal.add(jlblNomeRecurso);
        jlblNomeRecurso.setBounds(10, 280, 60, 25);

        jtxtNomeRecurso.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtxtNomeRecurso.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtNomeRecursoKeyPressed(evt);
            }
        });
        jpnlPrincipal.add(jtxtNomeRecurso);
        jtxtNomeRecurso.setBounds(70, 280, 600, 25);
        jpnlPrincipal.add(jsepRodape);
        jsepRodape.setBounds(10, 320, 660, 2);

        jbtnNovo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbtnNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cadhab/ui/icon/new.png"))); // NOI18N
        jbtnNovo.setText("Novo");
        jbtnNovo.setIconTextGap(10);
        jbtnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnNovoActionPerformed(evt);
            }
        });
        jbtnNovo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbtnNovoKeyPressed(evt);
            }
        });
        jpnlPrincipal.add(jbtnNovo);
        jbtnNovo.setBounds(30, 330, 120, 30);

        jbtnSalvar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbtnSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cadhab/ui/icon/save.png"))); // NOI18N
        jbtnSalvar.setText("Salvar");
        jbtnSalvar.setIconTextGap(10);
        jbtnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnSalvarActionPerformed(evt);
            }
        });
        jbtnSalvar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbtnSalvarKeyPressed(evt);
            }
        });
        jpnlPrincipal.add(jbtnSalvar);
        jbtnSalvar.setBounds(160, 330, 120, 30);

        jbtnEditar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbtnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cadhab/ui/icon/edit.png"))); // NOI18N
        jbtnEditar.setText("Editar");
        jbtnEditar.setIconTextGap(10);
        jbtnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnEditarActionPerformed(evt);
            }
        });
        jbtnEditar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbtnEditarKeyPressed(evt);
            }
        });
        jpnlPrincipal.add(jbtnEditar);
        jbtnEditar.setBounds(290, 330, 120, 30);

        jbtnLimpar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbtnLimpar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cadhab/ui/icon/clear.png"))); // NOI18N
        jbtnLimpar.setText("Limpar");
        jbtnLimpar.setIconTextGap(10);
        jbtnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnLimparActionPerformed(evt);
            }
        });
        jbtnLimpar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbtnLimparKeyPressed(evt);
            }
        });
        jpnlPrincipal.add(jbtnLimpar);
        jbtnLimpar.setBounds(420, 330, 120, 30);

        jbtnExcluir.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbtnExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cadhab/ui/icon/delete.png"))); // NOI18N
        jbtnExcluir.setText("Excluir");
        jbtnExcluir.setIconTextGap(10);
        jbtnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnExcluirActionPerformed(evt);
            }
        });
        jbtnExcluir.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbtnExcluirKeyPressed(evt);
            }
        });
        jpnlPrincipal.add(jbtnExcluir);
        jbtnExcluir.setBounds(550, 330, 120, 30);

        jsepPrincipal.setViewportView(jpnlPrincipal);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jsepPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, 684, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jsepPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, 375, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnLimparActionPerformed

        limparCampos();

    }//GEN-LAST:event_jbtnLimparActionPerformed

    private void jbtnLimparKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbtnLimparKeyPressed

        atalho(evt);

    }//GEN-LAST:event_jbtnLimparKeyPressed

    private void jbtnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnNovoActionPerformed
        
        criarNovo();
        
    }//GEN-LAST:event_jbtnNovoActionPerformed

    private void jbtnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnSalvarActionPerformed
        
        salvar();
        
    }//GEN-LAST:event_jbtnSalvarActionPerformed

    private void jbtnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnEditarActionPerformed
        
        editar();
        
    }//GEN-LAST:event_jbtnEditarActionPerformed

    private void jbtnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnExcluirActionPerformed
        
        excluir();
        
    }//GEN-LAST:event_jbtnExcluirActionPerformed

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        
        preencherTabelaPesquisa();
        
    }//GEN-LAST:event_formInternalFrameOpened

    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
        
        resetarForm();
        
    }//GEN-LAST:event_formInternalFrameClosing

    private void jtblPesquisaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtblPesquisaMouseClicked
        
        if (evt.getClickCount() == 2) {
            
            carregarDados();
            
        }
        
    }//GEN-LAST:event_jtblPesquisaMouseClicked

    private void jtblPesquisaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtblPesquisaKeyPressed
        
        atalho(evt);
        
    }//GEN-LAST:event_jtblPesquisaKeyPressed

    private void jtxtNomeRecursoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtNomeRecursoKeyPressed
        
        atalho(evt);
        
    }//GEN-LAST:event_jtxtNomeRecursoKeyPressed

    private void jbtnNovoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbtnNovoKeyPressed
        
        atalho(evt);
        
    }//GEN-LAST:event_jbtnNovoKeyPressed

    private void jbtnSalvarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbtnSalvarKeyPressed
        
        atalho(evt);
        
    }//GEN-LAST:event_jbtnSalvarKeyPressed

    private void jbtnEditarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbtnEditarKeyPressed
        
        atalho(evt);
        
    }//GEN-LAST:event_jbtnEditarKeyPressed

    private void jbtnExcluirKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbtnExcluirKeyPressed
        
        atalho(evt);
        
    }//GEN-LAST:event_jbtnExcluirKeyPressed

    private void preencherTabelaPesquisa() {
        
        try {
            
            javax.swing.table.DefaultTableModel modelo = (javax.swing.table.DefaultTableModel) jtblPesquisa.getModel();
            modelo.setNumRows(0);
            
            java.lang.Object output = cadhab.conn.ConnectionManager.connect("/recurso_sociais?auth_token=" + cadhab.CadHab.usuario.getToken() + "&auth_key=" + cadhab.CadHab.usuario.getUserKey(), "");
            
            if (output != null) {
                
                if (output instanceof java.util.List) {
                    
                    java.util.List<com.sys.urbano.RecursoSocial> recursos = (java.util.List<com.sys.urbano.RecursoSocial>) output;
                    
                    for (com.sys.urbano.RecursoSocial cursor : recursos) {
                        
                        modelo.addRow(new java.lang.Object[] { cursor.getId(), cursor.getNome() });
                        
                    }
                    
                }
                
            }
            
        } catch (java.net.MalformedURLException ex) {
            
            ex.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, "N√£o foi poss√≠vel encontrar um caminho at√© o servidor!Verifique se as configura√ß√µes do servidor est√£o corretas.", "CadHab", 0);
            
        } catch (java.net.ConnectException ex) {
            
            ex.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, "O servidor do CadHab est√° temporariamente fora do ar!\nTente novamente mais tarde.", "CadHab", 0);
            
        } catch (java.io.IOException ex) {
            
            ex.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, "N√£o foi poss√≠vel enviar/obter as informa√ß√µes para/do servidor!", "CadHab", 0);
            
        } catch (java.lang.Exception ex) {
            
            javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage(), "CadHab", 0);
            
        }
        
    }
    
    private void criarNovo() {
        
        limparCampos();
        habilitarCampos();
        desabilitarBotoes();
        jbtnNovo.setEnabled(true);
        jbtnSalvar.setEnabled(true);
        acao = 'N';
        
    }
    
    private void salvar() {
        
        try {
            
            String nome = jtxtNomeRecurso.getText();
            
            if (! nome.isEmpty()) {
                
                com.sys.urbano.RecursoSocial recurso = new com.sys.urbano.RecursoSocial();
                recurso.setNome(nome);
                    
                com.utils.JsonManager jsonMgr = new com.utils.JsonManager();
                String input = jsonMgr.parseJson(recurso);
                
                java.lang.Object output = cadhab.conn.ConnectionManager.connect("/recurso_social/nome?auth_token=" + cadhab.CadHab.usuario.getToken() + "&auth_key=" + cadhab.CadHab.usuario.getUserKey(), input);
                
                if (output == null) {
                    
                    java.lang.Object[] options = {"Sim", "N√£o"};
                    java.lang.Object opcao = javax.swing.JOptionPane.showOptionDialog(this, "Deseja realmente inserir o novo recurso social no sistema?", "CadHab",
                            javax.swing.JOptionPane.DEFAULT_OPTION, javax.swing.JOptionPane.QUESTION_MESSAGE, null,
                            options, options[1]);

                    if (opcao.toString().equals("0")) {
                        
                        output = cadhab.conn.ConnectionManager.connect("/recurso_social/salvar?auth_token=" + cadhab.CadHab.usuario.getToken() + "&auth_key=" + cadhab.CadHab.usuario.getUserKey(), input);   

                        if (output != null) {

                            if (output instanceof com.sys.Message) {

                                com.sys.Message mensagem = (com.sys.Message) output;
                                javax.swing.JOptionPane.showMessageDialog(this, mensagem.getMessage(), "CadHab", mensagem.getCode());
                                limparCampos();
                                desabilitarCampos();
                                desabilitarBotoes();
                                jbtnNovo.setEnabled(true);
                                preencherTabelaPesquisa();
                                acao = ' ';

                            }

                        } else {

                            javax.swing.JOptionPane.showMessageDialog(this, "N√£o foi poss√≠vel fazer o cadastro do novo recurso social!", "CadHab", 0);

                        }
                        
                    }
                    
                } else {
                        
                    javax.swing.JOptionPane.showMessageDialog(this, "J√° existe um recurso social com este nome cadastrado no sistema!", "CadHab", 2);
                        
                }
                
            } else {
                
                javax.swing.JOptionPane.showMessageDialog(this, "Verifique se todos os campos obrigat√≥rios se encontram preenchidos e/ou selecionados!", "CadHab", 2);
                
            }
            
        } catch (java.net.MalformedURLException ex) {
            
            ex.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, "N√£o foi poss√≠vel encontrar um caminho at√© o servidor!Verifique se as configura√ß√µes do servidor est√£o corretas.", "CadHab", 0);
            
        } catch (java.net.ConnectException ex) {
            
            ex.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, "O servidor do CadHab est√° temporariamente fora do ar!\nTente novamente mais tarde.", "CadHab", 0);
            
        } catch (java.io.IOException ex) {
            
            ex.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, "N√£o foi poss√≠vel enviar/obter as informa√ß√µes para/do servidor!", "CadHab", 0);
            
        } catch (java.lang.Exception ex) {
            
            javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage(), "CadHab", 0);
            
        }
        
    }
    
    private void editar() {
        
        try {
            
            String nome = jtxtNomeRecurso.getText();
            
            if (! nome.isEmpty()) {
                
                com.sys.urbano.RecursoSocial recurso = new com.sys.urbano.RecursoSocial();
                recurso.setId(Integer.parseInt(jtblPesquisa.getModel().getValueAt(jtblPesquisa.getSelectedRow(), 0).toString()));
                recurso.setNome(nome);
                    
                com.utils.JsonManager jsonMgr = new com.utils.JsonManager();
                String input = jsonMgr.parseJson(recurso);
                    
                java.lang.Object output = cadhab.conn.ConnectionManager.connect("/recurso_social/nome?auth_token=" + cadhab.CadHab.usuario.getToken() + "&auth_key=" + cadhab.CadHab.usuario.getUserKey(), input);
                
                if (output == null) {
                    
                    java.lang.Object[] options = {"Sim", "N√£o"};
                    java.lang.Object opcao = javax.swing.JOptionPane.showOptionDialog(this, "Deseja realmente atualizar os dados do recurso social no sistema?", "CadHab",
                            javax.swing.JOptionPane.DEFAULT_OPTION, javax.swing.JOptionPane.QUESTION_MESSAGE, null,
                            options, options[1]);

                    if (opcao.toString().equals("0")) {
                        
                        output = cadhab.conn.ConnectionManager.connect("/recurso_social/atualizar?auth_token=" + cadhab.CadHab.usuario.getToken() + "&auth_key=" + cadhab.CadHab.usuario.getUserKey(), input);
                        
                        if (output != null) {

                            if (output instanceof com.sys.Message) {

                                com.sys.Message mensagem = (com.sys.Message) output;
                                javax.swing.JOptionPane.showMessageDialog(this, mensagem.getMessage(), "CadHab", mensagem.getCode());
                                limparCampos();
                                desabilitarCampos();
                                desabilitarBotoes();
                                jbtnNovo.setEnabled(true);
                                preencherTabelaPesquisa();
                                acao = ' ';

                            }

                        } else {

                            javax.swing.JOptionPane.showMessageDialog(this, "N√£o foi poss√≠vel atualizar os dados do recurso social!", "CadHab", 0);

                        }
                        
                    }
                    
                } else {
                        
                    javax.swing.JOptionPane.showMessageDialog(this, "J√° existe um outro recurso com este nome cadastrado no sistema!", "CadHab", 2);
                        
                }
                
            } else {
                
                javax.swing.JOptionPane.showMessageDialog(this, "Verifique se todos os campos obrigat√≥rios se encontram preenchidos e/ou selecionados!", "CadHab", 2);
                
            }
            
        } catch (java.net.MalformedURLException ex) {
            
            ex.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, "N√£o foi poss√≠vel encontrar um caminho at√© o servidor!Verifique se as configura√ß√µes do servidor est√£o corretas.", "CadHab", 0);
            
        } catch (java.net.ConnectException ex) {
            
            ex.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, "O servidor do CadHab est√° temporariamente fora do ar!\nTente novamente mais tarde.", "CadHab", 0);
            
        } catch (java.io.IOException ex) {
            
            ex.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, "N√£o foi poss√≠vel enviar/obter as informa√ß√µes para/do servidor!", "CadHab", 0);
            
        } catch (java.lang.Exception ex) {
            
            javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage(), "CadHab", 0);
            
        }
        
    }
    
    private void excluir() {
        
        try {
            
            if (jtblPesquisa.getSelectedRow() >= 0) {
                
                com.sys.urbano.RecursoSocial recurso = new com.sys.urbano.RecursoSocial();
                recurso.setId(Integer.parseInt(jtblPesquisa.getModel().getValueAt(jtblPesquisa.getSelectedRow(), 0).toString()));
                    
                com.utils.JsonManager jsonMgr = new com.utils.JsonManager();
                String input = jsonMgr.parseJson(recurso);
                
                java.lang.Object output = cadhab.conn.ConnectionManager.connect("/recurso_social/id?auth_token=" + cadhab.CadHab.usuario.getToken() + "&auth_key=" + cadhab.CadHab.usuario.getUserKey(), input);
                
                if (output != null) {
                    
                    java.lang.Object[] options = {"Sim", "N√£o"};
                    java.lang.Object opcao = javax.swing.JOptionPane.showOptionDialog(this, "Deseja realmente excluir os dados do recurso social do sistema?", "CadHab",
                            javax.swing.JOptionPane.DEFAULT_OPTION, javax.swing.JOptionPane.QUESTION_MESSAGE, null,
                            options, options[1]);

                    if (opcao.toString().equals("0")) {
                        
                        output = cadhab.conn.ConnectionManager.connect("/recurso_social/excluir?auth_token=" + cadhab.CadHab.usuario.getToken() + "&auth_key=" + cadhab.CadHab.usuario.getUserKey(), input);   

                        if (output != null) {

                            if (output instanceof com.sys.Message) {

                                com.sys.Message mensagem = (com.sys.Message) output;
                                javax.swing.JOptionPane.showMessageDialog(this, mensagem.getMessage(), "CadHab", mensagem.getCode());
                                limparCampos();
                                desabilitarCampos();
                                desabilitarBotoes();
                                jbtnNovo.setEnabled(true);
                                preencherTabelaPesquisa();
                                acao = ' ';

                            }

                        } else {

                            javax.swing.JOptionPane.showMessageDialog(this, "N√£o foi poss√≠vel excluir os dados do recurso social!", "CadHab", 0);

                        }
                        
                    }
                    
                } else {
                        
                    javax.swing.JOptionPane.showMessageDialog(this, "N√£o foi poss√≠vel encontrar os dados do recurso social no sistema!", "CadHab", 0);
                        
                }
                
            }
            
        } catch (java.net.MalformedURLException ex) {
            
            ex.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, "N√£o foi poss√≠vel encontrar um caminho at√© o servidor!Verifique se as configura√ß√µes do servidor est√£o corretas.", "CadHab", 0);
            
        } catch (java.net.ConnectException ex) {
            
            ex.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, "O servidor do CadHab est√° temporariamente fora do ar!\nTente novamente mais tarde.", "CadHab", 0);
            
        } catch (java.io.IOException ex) {
            
            ex.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, "N√£o foi poss√≠vel enviar/obter as informa√ß√µes para/do servidor!", "CadHab", 0);
            
        } catch (java.lang.Exception ex) {
            
            javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage(), "CadHab", 0);
            
        }
        
    }
    
    private void carregarDados() {
        
        if (jtblPesquisa.getSelectedRow() >= 0) {
            
            jtxtNomeRecurso.setText(jtblPesquisa.getModel().getValueAt(jtblPesquisa.getSelectedRow(), 1).toString());
            habilitarCampos();
            habilitarBotoes();
            jbtnSalvar.setEnabled(false);
            acao = 'U';
            
        }
        
    }
    
    private void atalho(java.awt.event.KeyEvent evt) {
        
        if (evt.isControlDown()) {
        
            switch (evt.getKeyCode()) {
                
                case java.awt.event.KeyEvent.VK_D: {
                    if (acao == 'U')
                        excluir();
                }
                    break;
                    
                case java.awt.event.KeyEvent.VK_E: {
                    if (acao == 'U')
                        editar();
                }
                    break;
                    
                case java.awt.event.KeyEvent.VK_L: {
                    if (acao == 'N' || acao == 'U')
                        limparCampos();
                }
                    break;

                case java.awt.event.KeyEvent.VK_N: {
                    criarNovo();
                }
                    break;
                    
                case java.awt.event.KeyEvent.VK_S: {
                    if (acao == 'N')
                        salvar();
                }
                    break;

            }
        
        } else {
            
            switch (evt.getKeyCode()) {
                
                case java.awt.event.KeyEvent.VK_ESCAPE: {
                    resetarForm();
                    this.doDefaultCloseAction();
                }
                    break;
                
                case java.awt.event.KeyEvent.VK_F5: {
                    preencherTabelaPesquisa();
                }
                    break;
                    
                case java.awt.event.KeyEvent.VK_F6: {
                    carregarDados();
                }
                    break;
                
            }
            
        }
        
    }
    
    private void limparCampos() {
        
        jtxtNomeRecurso.setText("");
        
    }
    
    private void habilitarCampos() {
        
        jtxtNomeRecurso.setEnabled(true);
        
    }
    
    private void desabilitarCampos() {
        
        jtxtNomeRecurso.setEnabled(false);
        
    }
    
    private void habilitarBotoes() {
        
        jbtnNovo.setEnabled(true);
        jbtnSalvar.setEnabled(true);
        jbtnEditar.setEnabled(true);
        jbtnLimpar.setEnabled(true);
        jbtnExcluir.setEnabled(true);
        
    }
    
    private void desabilitarBotoes() {
        
        jbtnNovo.setEnabled(false);
        jbtnSalvar.setEnabled(false);
        jbtnEditar.setEnabled(false);
        jbtnLimpar.setEnabled(false);
        jbtnExcluir.setEnabled(false);
        
    }
    
    private void resetarForm() {
        
        limparCampos();
        desabilitarCampos();
        desabilitarBotoes();
        jbtnNovo.setEnabled(true);
        
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jbtnEditar;
    private javax.swing.JButton jbtnExcluir;
    private javax.swing.JButton jbtnLimpar;
    private javax.swing.JButton jbtnNovo;
    private javax.swing.JButton jbtnSalvar;
    private javax.swing.JLabel jlblNomeRecurso;
    private javax.swing.JPanel jpnlPrincipal;
    private javax.swing.JPanel jpnlTabelaPesquisa;
    private javax.swing.JScrollPane jscpTabelaPesquisa;
    private javax.swing.JScrollPane jsepPrincipal;
    private javax.swing.JSeparator jsepRodape;
    private javax.swing.JTable jtblPesquisa;
    private javax.swing.JTextField jtxtNomeRecurso;
    // End of variables declaration//GEN-END:variables
}
