/*
 * Classe pertencente ao m칩dulo de GUI do sistema "CadHab".
 */
package cadhab.ui;

/**
 *
 * @author William Oliveira
 * 
 * @version 1.0
 */
public class FormGerenciarUsuario extends javax.swing.JInternalFrame {
    
    private char acao = ' ';

    /**
     * Creates new form FormGerenciarUsuario
     */
    public FormGerenciarUsuario() {
        
        initComponents();
        
        try {
            
            com.sys.SystemSettings.setSystemThemeNimbus();
            
        } catch (java.lang.Exception ex) {
            
            ex.printStackTrace();
            
        }
        
        limparCampos();
        desabilitarCampos();
        desabilitarBotoes();
        jbtnNovo.setEnabled(true);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpnlPrincipal = new javax.swing.JPanel();
        jlblPesquisa = new javax.swing.JLabel();
        jtxtPesquisa = new javax.swing.JTextField();
        jlblFiltro = new javax.swing.JLabel();
        jcbbFiltro = new javax.swing.JComboBox();
        jbtnPesquisar = new javax.swing.JButton();
        jpnlTabelaPesquisa = new javax.swing.JPanel();
        jscpTabelaPesquisa = new javax.swing.JScrollPane();
        jtblPesquisa = new javax.swing.JTable();
        jlblFoto = new javax.swing.JLabel();
        jlblUsuario = new javax.swing.JLabel();
        jtxtUsuario = new javax.swing.JTextField();
        jlblSenha = new javax.swing.JLabel();
        jpwdSenha = new javax.swing.JPasswordField();
        jbtnAlterarSenha = new javax.swing.JButton();
        jlblConfirmeSenha = new javax.swing.JLabel();
        jpwdConfirmeSenha = new javax.swing.JPasswordField();
        jlblEmail = new javax.swing.JLabel();
        jtxtEmail = new javax.swing.JTextField();
        jlblNome = new javax.swing.JLabel();
        jtxtNome = new javax.swing.JTextField();
        jlblDepartamento = new javax.swing.JLabel();
        jcbbDepartamento = new javax.swing.JComboBox();
        jlblGrupo = new javax.swing.JLabel();
        jcbbGrupo = new javax.swing.JComboBox();
        jlblAtivo = new javax.swing.JLabel();
        jcbbAtivo = new javax.swing.JComboBox();
        jsepRodape = new javax.swing.JSeparator();
        jbtnNovo = new javax.swing.JButton();
        jbtnSalvar = new javax.swing.JButton();
        jbtnEditar = new javax.swing.JButton();
        jbtnLimpar = new javax.swing.JButton();
        jbtnExcluir = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("CadHab - Gerenciamento de Usu치rios");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/cadhab/ui/icon/user.png"))); // NOI18N
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        jpnlPrincipal.setLayout(null);

        jlblPesquisa.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jlblPesquisa.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jlblPesquisa.setText("Pesquisa:");
        jpnlPrincipal.add(jlblPesquisa);
        jlblPesquisa.setBounds(10, 10, 60, 25);

        jtxtPesquisa.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtxtPesquisa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtPesquisaKeyPressed(evt);
            }
        });
        jpnlPrincipal.add(jtxtPesquisa);
        jtxtPesquisa.setBounds(80, 10, 320, 25);

        jlblFiltro.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jlblFiltro.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jlblFiltro.setText("Filtrar Por:");
        jpnlPrincipal.add(jlblFiltro);
        jlblFiltro.setBounds(410, 10, 70, 25);

        jcbbFiltro.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jcbbFiltro.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Sem filtro", "Usu치rio", "Nome", "E-mail" }));
        jcbbFiltro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jcbbFiltroKeyPressed(evt);
            }
        });
        jpnlPrincipal.add(jcbbFiltro);
        jcbbFiltro.setBounds(490, 10, 150, 25);

        jbtnPesquisar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbtnPesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cadhab/ui/icon/search.png"))); // NOI18N
        jbtnPesquisar.setText("Pesquisar");
        jbtnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnPesquisarActionPerformed(evt);
            }
        });
        jbtnPesquisar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbtnPesquisarKeyPressed(evt);
            }
        });
        jpnlPrincipal.add(jbtnPesquisar);
        jbtnPesquisar.setBounds(650, 10, 120, 30);

        jtblPesquisa.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtblPesquisa.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "", "Usu치rio", "Nome", "E-mail", "Secretaria", "Membro de", "Ativo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtblPesquisa.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jtblPesquisa.getTableHeader().setReorderingAllowed(false);
        jtblPesquisa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtblPesquisaMouseClicked(evt);
            }
        });
        jtblPesquisa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtblPesquisaKeyPressed(evt);
            }
        });
        jscpTabelaPesquisa.setViewportView(jtblPesquisa);
        jtblPesquisa.getColumnModel().getColumn(0).setResizable(false);
        jtblPesquisa.getColumnModel().getColumn(0).setMinWidth(0);
        jtblPesquisa.getColumnModel().getColumn(0).setPreferredWidth(0);
        jtblPesquisa.getColumnModel().getColumn(0).setMaxWidth(0);
        jtblPesquisa.getColumnModel().getColumn(1).setMinWidth(100);
        jtblPesquisa.getColumnModel().getColumn(1).setPreferredWidth(100);
        jtblPesquisa.getColumnModel().getColumn(2).setMinWidth(300);
        jtblPesquisa.getColumnModel().getColumn(2).setPreferredWidth(300);
        jtblPesquisa.getColumnModel().getColumn(3).setMinWidth(300);
        jtblPesquisa.getColumnModel().getColumn(3).setPreferredWidth(300);
        jtblPesquisa.getColumnModel().getColumn(4).setMinWidth(300);
        jtblPesquisa.getColumnModel().getColumn(4).setPreferredWidth(300);
        jtblPesquisa.getColumnModel().getColumn(5).setMinWidth(300);
        jtblPesquisa.getColumnModel().getColumn(5).setPreferredWidth(300);
        jtblPesquisa.getColumnModel().getColumn(6).setMinWidth(100);
        jtblPesquisa.getColumnModel().getColumn(6).setPreferredWidth(100);

        javax.swing.GroupLayout jpnlTabelaPesquisaLayout = new javax.swing.GroupLayout(jpnlTabelaPesquisa);
        jpnlTabelaPesquisa.setLayout(jpnlTabelaPesquisaLayout);
        jpnlTabelaPesquisaLayout.setHorizontalGroup(
            jpnlTabelaPesquisaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jscpTabelaPesquisa, javax.swing.GroupLayout.DEFAULT_SIZE, 760, Short.MAX_VALUE)
        );
        jpnlTabelaPesquisaLayout.setVerticalGroup(
            jpnlTabelaPesquisaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jscpTabelaPesquisa, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
        );

        jpnlPrincipal.add(jpnlTabelaPesquisa);
        jpnlTabelaPesquisa.setBounds(10, 50, 760, 240);

        jlblFoto.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jlblFoto.setToolTipText("Duplo-clique para alterar a foto");
        jlblFoto.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jlblFoto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jlblFotoMouseClicked(evt);
            }
        });
        jlblFoto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jlblFotoKeyPressed(evt);
            }
        });
        jpnlPrincipal.add(jlblFoto);
        jlblFoto.setBounds(650, 300, 115, 115);

        jlblUsuario.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jlblUsuario.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jlblUsuario.setText("Nome de Usu치rio:");
        jpnlPrincipal.add(jlblUsuario);
        jlblUsuario.setBounds(10, 300, 120, 25);

        jtxtUsuario.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtxtUsuario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtUsuarioKeyPressed(evt);
            }
        });
        jpnlPrincipal.add(jtxtUsuario);
        jtxtUsuario.setBounds(140, 300, 500, 25);

        jlblSenha.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jlblSenha.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jlblSenha.setText("Senha:");
        jpnlPrincipal.add(jlblSenha);
        jlblSenha.setBounds(10, 330, 120, 25);

        jpwdSenha.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jpwdSenha.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jpwdSenhaKeyPressed(evt);
            }
        });
        jpnlPrincipal.add(jpwdSenha);
        jpwdSenha.setBounds(140, 330, 470, 25);

        jbtnAlterarSenha.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cadhab/ui/icon/manage.png"))); // NOI18N
        jbtnAlterarSenha.setToolTipText("Alterar senha");
        jbtnAlterarSenha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnAlterarSenhaActionPerformed(evt);
            }
        });
        jbtnAlterarSenha.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbtnAlterarSenhaKeyPressed(evt);
            }
        });
        jpnlPrincipal.add(jbtnAlterarSenha);
        jbtnAlterarSenha.setBounds(615, 330, 25, 25);

        jlblConfirmeSenha.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jlblConfirmeSenha.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jlblConfirmeSenha.setText("Confirme a Senha:");
        jpnlPrincipal.add(jlblConfirmeSenha);
        jlblConfirmeSenha.setBounds(10, 360, 120, 25);

        jpwdConfirmeSenha.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jpwdConfirmeSenha.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jpwdConfirmeSenhaKeyPressed(evt);
            }
        });
        jpnlPrincipal.add(jpwdConfirmeSenha);
        jpwdConfirmeSenha.setBounds(140, 360, 500, 25);

        jlblEmail.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jlblEmail.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jlblEmail.setText("E-mail:");
        jpnlPrincipal.add(jlblEmail);
        jlblEmail.setBounds(10, 390, 120, 25);

        jtxtEmail.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtxtEmail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtEmailKeyPressed(evt);
            }
        });
        jpnlPrincipal.add(jtxtEmail);
        jtxtEmail.setBounds(140, 390, 500, 25);

        jlblNome.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jlblNome.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jlblNome.setText("Nome:");
        jpnlPrincipal.add(jlblNome);
        jlblNome.setBounds(10, 420, 120, 25);

        jtxtNome.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtxtNome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtNomeKeyPressed(evt);
            }
        });
        jpnlPrincipal.add(jtxtNome);
        jtxtNome.setBounds(140, 420, 630, 25);

        jlblDepartamento.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jlblDepartamento.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jlblDepartamento.setText("Secretaria:");
        jpnlPrincipal.add(jlblDepartamento);
        jlblDepartamento.setBounds(10, 450, 120, 25);

        jcbbDepartamento.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jcbbDepartamento.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecione uma op칞칚o" }));
        jcbbDepartamento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jcbbDepartamentoKeyPressed(evt);
            }
        });
        jpnlPrincipal.add(jcbbDepartamento);
        jcbbDepartamento.setBounds(140, 450, 630, 25);

        jlblGrupo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jlblGrupo.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jlblGrupo.setText("Membro de:");
        jpnlPrincipal.add(jlblGrupo);
        jlblGrupo.setBounds(10, 480, 120, 25);

        jcbbGrupo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jcbbGrupo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecione uma op칞칚o" }));
        jcbbGrupo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jcbbGrupoKeyPressed(evt);
            }
        });
        jpnlPrincipal.add(jcbbGrupo);
        jcbbGrupo.setBounds(140, 480, 350, 25);

        jlblAtivo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jlblAtivo.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jlblAtivo.setText("Ativo:");
        jpnlPrincipal.add(jlblAtivo);
        jlblAtivo.setBounds(500, 480, 50, 25);

        jcbbAtivo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jcbbAtivo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecione uma op칞칚o", "Sim", "N칚o" }));
        jcbbAtivo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jcbbAtivoKeyPressed(evt);
            }
        });
        jpnlPrincipal.add(jcbbAtivo);
        jcbbAtivo.setBounds(560, 480, 210, 25);
        jpnlPrincipal.add(jsepRodape);
        jsepRodape.setBounds(10, 520, 760, 2);

        jbtnNovo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbtnNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cadhab/ui/icon/new.png"))); // NOI18N
        jbtnNovo.setText("Novo");
        jbtnNovo.setIconTextGap(10);
        jbtnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnNovoActionPerformed(evt);
            }
        });
        jbtnNovo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbtnNovoKeyPressed(evt);
            }
        });
        jpnlPrincipal.add(jbtnNovo);
        jbtnNovo.setBounds(130, 530, 120, 30);

        jbtnSalvar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbtnSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cadhab/ui/icon/save.png"))); // NOI18N
        jbtnSalvar.setText("Salvar");
        jbtnSalvar.setIconTextGap(10);
        jbtnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnSalvarActionPerformed(evt);
            }
        });
        jbtnSalvar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbtnSalvarKeyPressed(evt);
            }
        });
        jpnlPrincipal.add(jbtnSalvar);
        jbtnSalvar.setBounds(260, 530, 120, 30);

        jbtnEditar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbtnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cadhab/ui/icon/edit.png"))); // NOI18N
        jbtnEditar.setText("Editar");
        jbtnEditar.setIconTextGap(10);
        jbtnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnEditarActionPerformed(evt);
            }
        });
        jbtnEditar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbtnEditarKeyPressed(evt);
            }
        });
        jpnlPrincipal.add(jbtnEditar);
        jbtnEditar.setBounds(390, 530, 120, 30);

        jbtnLimpar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbtnLimpar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cadhab/ui/icon/clear.png"))); // NOI18N
        jbtnLimpar.setText("Limpar");
        jbtnLimpar.setIconTextGap(10);
        jbtnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnLimparActionPerformed(evt);
            }
        });
        jbtnLimpar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbtnLimparKeyPressed(evt);
            }
        });
        jpnlPrincipal.add(jbtnLimpar);
        jbtnLimpar.setBounds(520, 530, 120, 30);

        jbtnExcluir.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbtnExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cadhab/ui/icon/delete.png"))); // NOI18N
        jbtnExcluir.setText("Excluir");
        jbtnExcluir.setIconTextGap(10);
        jbtnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnExcluirActionPerformed(evt);
            }
        });
        jbtnExcluir.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbtnExcluirKeyPressed(evt);
            }
        });
        jpnlPrincipal.add(jbtnExcluir);
        jbtnExcluir.setBounds(650, 530, 120, 30);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpnlPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, 784, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpnlPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, 576, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnPesquisarActionPerformed
        
        pesquisar();
        
    }//GEN-LAST:event_jbtnPesquisarActionPerformed

    private void jbtnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnNovoActionPerformed
        
        criarNovo();
        
    }//GEN-LAST:event_jbtnNovoActionPerformed

    private void jbtnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnSalvarActionPerformed
        
        salvar();
        
    }//GEN-LAST:event_jbtnSalvarActionPerformed

    private void jbtnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnEditarActionPerformed
        
        editar();
        
    }//GEN-LAST:event_jbtnEditarActionPerformed

    private void jbtnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnExcluirActionPerformed
        
        excluir();
        
    }//GEN-LAST:event_jbtnExcluirActionPerformed

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        
        preencherComboDepartamentos();
        preencherComboGrupos();
        preencherTabelaPesquisa();
        
    }//GEN-LAST:event_formInternalFrameOpened

    private void jbtnLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnLimparActionPerformed

        limparCampos();

    }//GEN-LAST:event_jbtnLimparActionPerformed

    private void jtblPesquisaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtblPesquisaMouseClicked
        
        if (evt.getClickCount() == 2) {
            
            carregarDados();
            
        }
            
    }//GEN-LAST:event_jtblPesquisaMouseClicked

    private void jbtnAlterarSenhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnAlterarSenhaActionPerformed
        
        FormGerenciarAlterarSenha fGerenciarAlterarSenha = new FormGerenciarAlterarSenha(null, true);
        fGerenciarAlterarSenha.setUsername(jtblPesquisa.getModel().getValueAt(jtblPesquisa.getSelectedRow(), 1).toString());
        fGerenciarAlterarSenha.setVisible(true);
        
    }//GEN-LAST:event_jbtnAlterarSenhaActionPerformed

    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
        
        limparCampos();
        desabilitarCampos();
        desabilitarBotoes();
        jbtnNovo.setEnabled(true);
        
    }//GEN-LAST:event_formInternalFrameClosing

    private void jtxtPesquisaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtPesquisaKeyPressed
        
        atalho(evt);
        
    }//GEN-LAST:event_jtxtPesquisaKeyPressed

    private void jcbbFiltroKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jcbbFiltroKeyPressed
        
        atalho(evt);
        
    }//GEN-LAST:event_jcbbFiltroKeyPressed

    private void jbtnPesquisarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbtnPesquisarKeyPressed
        
        atalho(evt);
        
    }//GEN-LAST:event_jbtnPesquisarKeyPressed

    private void jtblPesquisaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtblPesquisaKeyPressed
        
        atalho(evt);
        
    }//GEN-LAST:event_jtblPesquisaKeyPressed

    private void jtxtUsuarioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtUsuarioKeyPressed
        
        atalho(evt);
        
    }//GEN-LAST:event_jtxtUsuarioKeyPressed

    private void jpwdSenhaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jpwdSenhaKeyPressed
        
        atalho(evt);
        
    }//GEN-LAST:event_jpwdSenhaKeyPressed

    private void jbtnAlterarSenhaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbtnAlterarSenhaKeyPressed
        
        atalho(evt);
        
    }//GEN-LAST:event_jbtnAlterarSenhaKeyPressed

    private void jpwdConfirmeSenhaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jpwdConfirmeSenhaKeyPressed
        
        atalho(evt);
        
    }//GEN-LAST:event_jpwdConfirmeSenhaKeyPressed

    private void jtxtEmailKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtEmailKeyPressed
        
        atalho(evt);
        
    }//GEN-LAST:event_jtxtEmailKeyPressed

    private void jtxtNomeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtNomeKeyPressed
        
        atalho(evt);
        
    }//GEN-LAST:event_jtxtNomeKeyPressed

    private void jcbbDepartamentoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jcbbDepartamentoKeyPressed
        
        atalho(evt);
        
    }//GEN-LAST:event_jcbbDepartamentoKeyPressed

    private void jcbbGrupoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jcbbGrupoKeyPressed
        
        atalho(evt);
        
    }//GEN-LAST:event_jcbbGrupoKeyPressed

    private void jcbbAtivoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jcbbAtivoKeyPressed
        
        atalho(evt);
        
    }//GEN-LAST:event_jcbbAtivoKeyPressed

    private void jlblFotoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jlblFotoKeyPressed
        
        atalho(evt);
        
    }//GEN-LAST:event_jlblFotoKeyPressed

    private void jbtnNovoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbtnNovoKeyPressed
        
        atalho(evt);
        
    }//GEN-LAST:event_jbtnNovoKeyPressed

    private void jbtnSalvarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbtnSalvarKeyPressed
        
        atalho(evt);
        
    }//GEN-LAST:event_jbtnSalvarKeyPressed

    private void jbtnEditarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbtnEditarKeyPressed
        
        atalho(evt);
        
    }//GEN-LAST:event_jbtnEditarKeyPressed

    private void jbtnLimparKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbtnLimparKeyPressed
        
        atalho(evt);
        
    }//GEN-LAST:event_jbtnLimparKeyPressed

    private void jbtnExcluirKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbtnExcluirKeyPressed
        
        atalho(evt);
        
    }//GEN-LAST:event_jbtnExcluirKeyPressed

    private void jlblFotoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlblFotoMouseClicked
        
        if (evt.getClickCount() == 2) {
            
            alterarFoto();
            
        }
        
    }//GEN-LAST:event_jlblFotoMouseClicked

    private void preencherComboDepartamentos() {
        
        try {
         
            java.lang.Object output = cadhab.conn.ConnectionManager.connect("/departamentos?auth_token=" + cadhab.CadHab.usuario.getToken() + "&auth_key=" + cadhab.CadHab.usuario.getUserKey(), "");
            
            if (output instanceof java.util.List) {
                
                java.util.List<com.common.Departamento> departamentos = (java.util.List<com.common.Departamento>) output;
                
                jcbbDepartamento.removeAllItems();
                jcbbDepartamento.addItem("Selecione uma op칞칚o");
                
                for (int i = 0; i < departamentos.size(); i++)
                    jcbbDepartamento.addItem(departamentos.get(i).getSigla() + " - " + departamentos.get(i).getNome());
                
            }
            
        } catch (java.lang.Exception ex) {
            
            ex.printStackTrace();
            
        }
        
    }
    
    private void preencherComboGrupos() {
        
        try {
         
            java.lang.Object output = cadhab.conn.ConnectionManager.connect("/grupos?auth_token=" + cadhab.CadHab.usuario.getToken() + "&auth_key=" + cadhab.CadHab.usuario.getUserKey(), "");
            
            if (output instanceof java.util.List) {
                
                java.util.List<com.access.GrupoUsuario> grupos = (java.util.List<com.access.GrupoUsuario>) output;
                
                jcbbGrupo.removeAllItems();
                jcbbGrupo.addItem("Selecione uma op칞칚o");
                
                for (int i = 0; i < grupos.size(); i++)
                    jcbbGrupo.addItem(grupos.get(i).getNome());
                
            }
            
        } catch (java.lang.Exception ex) {
            
            ex.printStackTrace();
            
        }
        
    }
    
    private void preencherTabelaPesquisa() {
        
        try {
            
            javax.swing.table.DefaultTableModel modelo = (javax.swing.table.DefaultTableModel) jtblPesquisa.getModel();
            modelo.setNumRows(0);
                
            java.lang.Object output = cadhab.conn.ConnectionManager.connect("/usuarios/completo?auth_token=" + cadhab.CadHab.usuario.getToken() + "&auth_key=" + cadhab.CadHab.usuario.getUserKey(), "");
                    
            if (output != null) {
                
                if (output instanceof java.util.List) {

                    java.util.List<com.access.Usuario> usuarios = (java.util.List<com.access.Usuario>) output;
                    
                    for (com.access.Usuario cursor : usuarios) {
                        
                        modelo.addRow(new java.lang.Object[] { cursor.getId(), cursor.getUsuario(), cursor.getNome(), cursor.getEmail(), cursor.getDepartamento().getNome(), cursor.getGrupo().getNome(), cursor.getAtivo() });
                        
                    }

                }
                
            }
            
        } catch (java.net.MalformedURLException ex) {
            
            ex.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, "N칚o foi poss칤vel encontrar um caminho at칠 o servidor!Verifique se as configura칞칫es do servidor est칚o corretas.", "CadHab", 0);
            
        } catch (java.net.ConnectException ex) {
            
            ex.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, "O servidor do CadHab est치 temporariamente fora do ar!\nTente novamente mais tarde.", "CadHab", 0);
            
        } catch (java.io.IOException ex) {
            
            ex.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, "N칚o foi poss칤vel enviar/obter as informa칞칫es para/do servidor!", "CadHab", 0);
            
        } catch (java.lang.Exception ex) {
            
            javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage(), "CadHab", 0);
            
        }
        
    }
    
    private void pesquisar() {
        
        try {
            
            java.lang.Object output = null;
            String pesquisa = jtxtPesquisa.getText();
            
            if (! pesquisa.isEmpty()) {
                
                javax.swing.table.DefaultTableModel modelo = (javax.swing.table.DefaultTableModel) jtblPesquisa.getModel();
                modelo.setNumRows(0);
                
                com.access.Usuario usuario = new com.access.Usuario();
                com.util.JsonManager jsonMgr = new com.util.JsonManager();
                String input = "";
                
                switch (jcbbFiltro.getSelectedItem().toString()) {
                    
                    case "Sem filtro": {
                        usuario.setNome(pesquisa);
                        input = jsonMgr.parseJson(usuario);
                        output = cadhab.conn.ConnectionManager.connect("/usuarios/completo/nome?auth_token=" + cadhab.CadHab.usuario.getToken() + "&auth_key=" + cadhab.CadHab.usuario.getUserKey(), input);
                    }
                        break;
                        
                    case "Usu치rio": {
                        usuario.setUsuario(pesquisa);
                        input = jsonMgr.parseJson(usuario);
                        output = cadhab.conn.ConnectionManager.connect("/usuarios/completo/nomeusuario?auth_token=" + cadhab.CadHab.usuario.getToken() + "&auth_key=" + cadhab.CadHab.usuario.getUserKey(), input);
                    }
                        break;
                        
                    case "Nome": {
                        usuario.setNome(pesquisa);
                        input = jsonMgr.parseJson(usuario);
                        output = cadhab.conn.ConnectionManager.connect("/usuarios/completo/nome?auth_token=" + cadhab.CadHab.usuario.getToken() + "&auth_key=" + cadhab.CadHab.usuario.getUserKey(), input);
                    }
                        break;
                        
                    case "E-mail": {
                        usuario.setEmail(pesquisa);
                        input = jsonMgr.parseJson(usuario);
                        output = cadhab.conn.ConnectionManager.connect("/usuarios/completo/email?auth_token=" + cadhab.CadHab.usuario.getToken() + "&auth_key=" + cadhab.CadHab.usuario.getUserKey(), input);
                    }
                        break;
                    
                }
                
                if (output != null) {
                
                    if (output instanceof java.util.List) {

                        java.util.List<com.access.Usuario> usuarios = (java.util.List<com.access.Usuario>) output;

                        for (com.access.Usuario cursor : usuarios) {

                            modelo.addRow(new java.lang.Object[] { cursor.getId(), cursor.getUsuario(), cursor.getNome(), cursor.getEmail(), cursor.getDepartamento().getNome(), cursor.getGrupo().getNome(), cursor.getAtivo() });

                        }

                    }

                }
            
            } else {
                
                javax.swing.JOptionPane.showMessageDialog(this, "Digite alguma palavra para efetuar a pesquisa no sistema!", "CadHab", 2);
                
            }
            
        } catch (java.net.MalformedURLException ex) {
            
            ex.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, "N칚o foi poss칤vel encontrar um caminho at칠 o servidor!Verifique se as configura칞칫es do servidor est칚o corretas.", "CadHab", 0);
            
        } catch (java.net.ConnectException ex) {
            
            ex.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, "O servidor do CadHab est치 temporariamente fora do ar!\nTente novamente mais tarde.", "CadHab", 0);
            
        } catch (java.io.IOException ex) {
            
            ex.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, "N칚o foi poss칤vel enviar/obter as informa칞칫es para/do servidor!", "CadHab", 0);
            
        } catch (java.lang.Exception ex) {
            
            javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage(), "CadHab", 0);
            
        }
        
    }
    
    private void criarNovo() {
        
        limparCampos();
        habilitarCampos();
        desabilitarBotoes();
        jbtnNovo.setEnabled(true);
        jbtnSalvar.setEnabled(true);
        acao = 'N';
        
    }
    
    private void salvar() {
        
        try {
            
            String nomeUsuario = jtxtUsuario.getText();
            String senha = new java.lang.String(jpwdSenha.getPassword()).trim();
            String confSenha = new java.lang.String(jpwdConfirmeSenha.getPassword()).trim();
            String email = jtxtEmail.getText();
            String nome = jtxtNome.getText();
            String departamento = jcbbDepartamento.getSelectedItem().toString().split(" ")[0];
            String grupo = jcbbGrupo.getSelectedItem().toString();
            String ativo = jcbbAtivo.getSelectedItem().toString();
            
            if (! nomeUsuario.isEmpty() && ! senha.isEmpty() && ! confSenha.isEmpty() && ! nome.isEmpty()
                    && jcbbDepartamento.getSelectedIndex() > 0 && jcbbGrupo.getSelectedIndex() > 0 && jcbbAtivo.getSelectedIndex() > 0) {
                
                if (senha.equals(confSenha)) {
                
                    com.access.Usuario user = new com.access.Usuario();
                    user.setUsuario(nomeUsuario);
                    user.setSenha(senha);
                    user.setEmail(email);
                    user.setNome(nome);
                    user.setAtivo(ativo);
                    
                    com.util.JsonManager jsonMgr = new com.util.JsonManager();
                    String input = jsonMgr.parseJson(user);
                    
                    java.lang.Object output = cadhab.conn.ConnectionManager.connect("/usuario/usuario?auth_token=" + cadhab.CadHab.usuario.getToken() + "&auth_key=" + cadhab.CadHab.usuario.getUserKey(), input);
                    
                    if (output == null) {
                        
                        java.lang.Object[] options = {"Sim", "N칚o"};
                        java.lang.Object opcao = javax.swing.JOptionPane.showOptionDialog(this, "Deseja realmente inserir o novo usu치rio no sistema?", "CadHab",
                                javax.swing.JOptionPane.DEFAULT_OPTION, javax.swing.JOptionPane.QUESTION_MESSAGE, null,
                                options, options[1]);

                        if (opcao.toString().equals("0")) {
                            
                            com.common.Departamento depto = new com.common.Departamento();
                            depto.setSigla(departamento);
                            input = jsonMgr.parseJson(depto);
                            
                            output = cadhab.conn.ConnectionManager.connect("/departamento/sigla?auth_token=" + cadhab.CadHab.usuario.getToken() + "&auth_key=" + cadhab.CadHab.usuario.getUserKey(), input);
                            
                            if (output != null) {
                                
                                if (output instanceof com.common.Departamento) {
                    
                                    depto = (com.common.Departamento) output;
                                    user.setDepartamento(depto);
                                    
                                    com.access.GrupoUsuario group = new com.access.GrupoUsuario();
                                    group.setNome(grupo);
                                    input = jsonMgr.parseJson(group);
                                    
                                    output = cadhab.conn.ConnectionManager.connect("/grupo/nome?auth_token=" + cadhab.CadHab.usuario.getToken() + "&auth_key=" + cadhab.CadHab.usuario.getUserKey(), input);
                                    
                                    if (output != null) {
                                        
                                        if (output instanceof com.access.GrupoUsuario) {
                                            
                                            group = (com.access.GrupoUsuario) output;
                                            user.setGrupo(group);
                                            
                                            input = jsonMgr.parseJson(user);
                                            
                                            output = cadhab.conn.ConnectionManager.connect("/usuario/salvar?auth_token=" + cadhab.CadHab.usuario.getToken() + "&auth_key=" + cadhab.CadHab.usuario.getUserKey(), input);
                                            
                                            if (output != null) {
                                                
                                                if (output instanceof com.sys.Message) {
                    
                                                    com.sys.Message mensagem = (com.sys.Message) output;
                                                    javax.swing.JOptionPane.showMessageDialog(this, mensagem.getMessage(), "CadHab", mensagem.getCode());
                                                    limparCampos();
                                                    desabilitarCampos();
                                                    desabilitarBotoes();
                                                    jbtnNovo.setEnabled(true);
                                                    preencherTabelaPesquisa();
                                                    acao = ' ';

                                                }
                                                
                                            } else {
                        
                                                javax.swing.JOptionPane.showMessageDialog(this, "N칚o foi poss칤vel fazer o cadastro do novo usu치rio!", "CadHab", 0);

                                            }
                                            
                                        }
                                        
                                    } else {
                        
                                        javax.swing.JOptionPane.showMessageDialog(this, "N칚o foi poss칤vel encontrar o grupo selecionado!", "CadHab", 0);

                                    }

                                }
                                
                            } else {
                        
                                javax.swing.JOptionPane.showMessageDialog(this, "N칚o foi poss칤vel encontrar a secretaria selecionada!", "CadHab", 0);

                            }
                            
                        }
                        
                    } else {
                        
                        javax.swing.JOptionPane.showMessageDialog(this, "Este nome de usu치rio j치 est치 sendo utilizado por algu칠m!", "CadHab", 2);
                        
                    }
                
                } else {
                    
                    javax.swing.JOptionPane.showMessageDialog(this, "A senha e a confirma칞칚o da senha s칚o diferentes!", "CadHab", 2);
                    
                }
                
            } else {
                
                javax.swing.JOptionPane.showMessageDialog(this, "Verifique se todos os campos obrigat칩rios se encontram preenchidos e/ou selecionados!", "CadHab", 2);
                
            }
            
        } catch (java.net.MalformedURLException ex) {
            
            ex.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, "N칚o foi poss칤vel encontrar um caminho at칠 o servidor!Verifique se as configura칞칫es do servidor est칚o corretas.", "CadHab", 0);
            
        } catch (java.net.ConnectException ex) {
            
            ex.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, "O servidor do CadHab est치 temporariamente fora do ar!\nTente novamente mais tarde.", "CadHab", 0);
            
        } catch (java.io.IOException ex) {
            
            ex.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, "N칚o foi poss칤vel enviar/obter as informa칞칫es para/do servidor!", "CadHab", 0);
            
        } catch (java.lang.Exception ex) {
            
            javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage(), "CadHab", 0);
            
        }
        
    }
    
    private void editar() {
        
        try {
            
            String nomeUsuario = jtxtUsuario.getText();
            String email = jtxtEmail.getText();
            String nome = jtxtNome.getText();
            String departamento = jcbbDepartamento.getSelectedItem().toString().split(" ")[0];
            String grupo = jcbbGrupo.getSelectedItem().toString();
            String ativo = jcbbAtivo.getSelectedItem().toString();
            
            if (! nomeUsuario.isEmpty() && ! nome.isEmpty() && jcbbDepartamento.getSelectedIndex() > 0 
                    && jcbbGrupo.getSelectedIndex() > 0 && jcbbAtivo.getSelectedIndex() > 0) {
                    
                com.access.Usuario user = new com.access.Usuario();
                user.setId(Integer.parseInt(jtblPesquisa.getModel().getValueAt(jtblPesquisa.getSelectedRow(), 0).toString()));
                user.setUsuario(nomeUsuario);
                user.setEmail(email);
                user.setNome(nome);
                user.setAtivo(ativo);
                    
                com.util.JsonManager jsonMgr = new com.util.JsonManager();
                String input = jsonMgr.parseJson(user);
                    
                java.lang.Object output = cadhab.conn.ConnectionManager.connect("/usuario/usuario?auth_token=" + cadhab.CadHab.usuario.getToken() + "&auth_key=" + cadhab.CadHab.usuario.getUserKey(), input);
                    
                if (output != null) {
                    
                    if (jtxtUsuario.getText().equals("root") && jcbbAtivo.getSelectedItem().toString().equals("N칚o")) {
                        
                        javax.swing.JOptionPane.showMessageDialog(this, "Voc칡 n칚o pode desativar o usu치rio administrador do sistema!", "CadHab", 0);
                        return;
                        
                    }
                        
                    java.lang.Object[] options = {"Sim", "N칚o"};
                    java.lang.Object opcao = javax.swing.JOptionPane.showOptionDialog(this, "Deseja realmente atualizar os dados do usu치rio no sistema?", "CadHab",
                            javax.swing.JOptionPane.DEFAULT_OPTION, javax.swing.JOptionPane.QUESTION_MESSAGE, null,
                            options, options[1]);

                    if (opcao.toString().equals("0")) {
                            
                        com.common.Departamento depto = new com.common.Departamento();
                        depto.setSigla(departamento);
                        input = jsonMgr.parseJson(depto);
                            
                        output = cadhab.conn.ConnectionManager.connect("/departamento/sigla?auth_token=" + cadhab.CadHab.usuario.getToken() + "&auth_key=" + cadhab.CadHab.usuario.getUserKey(), input);
                        
                        if (output != null) {
                            
                            if (output instanceof com.common.Departamento) {
                                
                                depto = (com.common.Departamento) output;
                                user.setDepartamento(depto);
                                    
                                com.access.GrupoUsuario group = new com.access.GrupoUsuario();
                                group.setNome(grupo);
                                input = jsonMgr.parseJson(group);
                                    
                                output = cadhab.conn.ConnectionManager.connect("/grupo/nome?auth_token=" + cadhab.CadHab.usuario.getToken() + "&auth_key=" + cadhab.CadHab.usuario.getUserKey(), input);
                                    
                                if (output != null) {
                                        
                                    if (output instanceof com.access.GrupoUsuario) {
                                        
                                        group = (com.access.GrupoUsuario) output;
                                        user.setGrupo(group);
                                            
                                        input = jsonMgr.parseJson(user);
                                            
                                        output = cadhab.conn.ConnectionManager.connect("/usuario/atualizar?auth_token=" + cadhab.CadHab.usuario.getToken() + "&auth_key=" + cadhab.CadHab.usuario.getUserKey(), input);
                                            
                                        if (output != null) {
                                                
                                            if (output instanceof com.sys.Message) {
                    
                                                com.sys.Message mensagem = (com.sys.Message) output;
                                                javax.swing.JOptionPane.showMessageDialog(this, mensagem.getMessage(), "CadHab", mensagem.getCode());
                                                limparCampos();
                                                desabilitarCampos();
                                                desabilitarBotoes();
                                                jbtnNovo.setEnabled(true);
                                                preencherTabelaPesquisa();
                                                acao = ' ';

                                            }
                                                
                                        } else {
                        
                                            javax.swing.JOptionPane.showMessageDialog(this, "N칚o foi poss칤vel fazer a atualiza칞칚o dos dados do usu치rio!", "CadHab", 0);

                                        }
                                        
                                    }
                                        
                                } else {
                        
                                    javax.swing.JOptionPane.showMessageDialog(this, "N칚o foi poss칤vel encontrar o grupo selecionado!", "CadHab", 0);

                                }
                                
                            }
                            
                        } else {
                        
                            javax.swing.JOptionPane.showMessageDialog(this, "N칚o foi poss칤vel encontrar a secretaria selecionada!", "CadHab", 0);

                        }
                            
                    }
                        
                } else {
                        
                    javax.swing.JOptionPane.showMessageDialog(this, "O usu치rio selecionado n칚o foi encontrado no sistema!", "CadHab", 2);
                        
                }
                
            } else {
                
                javax.swing.JOptionPane.showMessageDialog(this, "Verifique se todos os campos obrigat칩rios se encontram preenchidos e/ou selecionados!", "CadHab", 2);
                
            }
            
        } catch (java.net.MalformedURLException ex) {
            
            ex.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, "N칚o foi poss칤vel encontrar um caminho at칠 o servidor!Verifique se as configura칞칫es do servidor est칚o corretas.", "CadHab", 0);
            
        } catch (java.net.ConnectException ex) {
            
            ex.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, "O servidor do CadHab est치 temporariamente fora do ar!\nTente novamente mais tarde.", "CadHab", 0);
            
        } catch (java.io.IOException ex) {
            
            ex.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, "N칚o foi poss칤vel enviar/obter as informa칞칫es para/do servidor!", "CadHab", 0);
            
        } catch (java.lang.Exception ex) {
            
            javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage(), "CadHab", 0);
            
        }
        
    }
    
    private void excluir() {
        
        try {
            
            if (jtblPesquisa.getSelectedRow() >= 0) {
                
                com.access.Usuario user = new com.access.Usuario();
                user.setId(Integer.parseInt(jtblPesquisa.getModel().getValueAt(jtblPesquisa.getSelectedRow(), 0).toString()));
                user.setUsuario(jtblPesquisa.getModel().getValueAt(jtblPesquisa.getSelectedRow(), 1).toString());
                
                if (! user.getUsuario().equals("root")) {
                
                    com.util.JsonManager jsonMgr = new com.util.JsonManager();
                    String input = jsonMgr.parseJson(user);

                    java.lang.Object output = cadhab.conn.ConnectionManager.connect("/usuario/usuario?auth_token=" + cadhab.CadHab.usuario.getToken() + "&auth_key=" + cadhab.CadHab.usuario.getUserKey(), input);

                    if (output != null) {

                        java.lang.Object[] options = {"Sim", "N칚o"};
                        java.lang.Object opcao = javax.swing.JOptionPane.showOptionDialog(this, "Deseja realmente excluir o usu치rio do sistema?", "CadHab",
                                javax.swing.JOptionPane.DEFAULT_OPTION, javax.swing.JOptionPane.QUESTION_MESSAGE, null,
                                options, options[1]);

                        if (opcao.toString().equals("0")) {

                            output = cadhab.conn.ConnectionManager.connect("/usuario/excluir?auth_token=" + cadhab.CadHab.usuario.getToken() + "&auth_key=" + cadhab.CadHab.usuario.getUserKey(), input);
                                            
                            if (output != null) {
                                                
                                if (output instanceof com.sys.Message) {
                    
                                    com.sys.Message mensagem = (com.sys.Message) output;
                                    javax.swing.JOptionPane.showMessageDialog(this, mensagem.getMessage(), "CadHab", mensagem.getCode());
                                    limparCampos();
                                    desabilitarCampos();
                                    desabilitarBotoes();
                                    jbtnNovo.setEnabled(true);
                                    preencherTabelaPesquisa();
                                    acao = ' ';

                                }
                                                
                            } else {
                        
                                javax.swing.JOptionPane.showMessageDialog(this, "N칚o foi poss칤vel excluir os dados do usu치rio do sistema!", "CadHab", 0);

                            }

                        }

                    } else {

                        javax.swing.JOptionPane.showMessageDialog(this, "O usu치rio selecionado n칚o foi encontrado no sistema!", "CadHab", 2);

                    }
                
                } else {
                    
                    javax.swing.JOptionPane.showMessageDialog(this, "Voc칡 n칚o pode excluir o usu치rio administrador do sistema!", "CadHab", 0);
                    
                }
                
            }
            
        } catch (java.net.MalformedURLException ex) {
            
            ex.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, "N칚o foi poss칤vel encontrar um caminho at칠 o servidor!Verifique se as configura칞칫es do servidor est칚o corretas.", "CadHab", 0);
            
        } catch (java.net.ConnectException ex) {
            
            ex.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, "O servidor do CadHab est치 temporariamente fora do ar!\nTente novamente mais tarde.", "CadHab", 0);
            
        } catch (java.io.IOException ex) {
            
            ex.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, "N칚o foi poss칤vel enviar/obter as informa칞칫es para/do servidor!", "CadHab", 0);
            
        } catch (java.lang.Exception ex) {
            
            javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage(), "CadHab", 0);
            
        }
        
    }
    
    private void carregarDados() {
        
        try {

            if (jtblPesquisa.getSelectedRow() >= 0) {
                    
                limparCampos();

                com.access.Usuario user = new com.access.Usuario();
                user.setUsuario(jtblPesquisa.getModel().getValueAt(jtblPesquisa.getSelectedRow(), 1).toString());
                    
                com.util.JsonManager jsonMgr = new com.util.JsonManager();
                String input = jsonMgr.parseJson(user);
                    
                java.lang.Object output = cadhab.conn.ConnectionManager.connect("/usuario/completo/usuario?auth_token=" + cadhab.CadHab.usuario.getToken() + "&auth_key=" + cadhab.CadHab.usuario.getUserKey(), input);
                    
                if (output != null) {
                        
                    if (output instanceof com.access.Usuario) {
                         
                        user = (com.access.Usuario) output;
                        jtxtUsuario.setText(user.getUsuario());
                        jpwdSenha.setText(user.getSenha());
                        jpwdConfirmeSenha.setText(user.getSenha());
                        jtxtEmail.setText(user.getEmail());
                        jtxtNome.setText(user.getNome());
                        jcbbDepartamento.setSelectedItem(user.getDepartamento().getSigla() + " - " + user.getDepartamento().getNome());
                        jcbbGrupo.setSelectedItem(user.getGrupo().getNome());
                        jcbbAtivo.setSelectedItem(user.getAtivo());
                            
                        if (user.getUsuario().equals("root") && ! cadhab.CadHab.usuario.getUsuario().equals("root")) {
                                
                            desabilitarCampos();
                            desabilitarBotoes();
                            jbtnAlterarSenha.setEnabled(false);
                                
                        } else {
                                
                            habilitarCampos();
                            habilitarBotoes();
                            jtxtUsuario.setEnabled(false);
                            jpwdSenha.setEnabled(false);
                            jpwdConfirmeSenha.setEnabled(false);
                            jbtnSalvar.setEnabled(false);
                                
                        }
                        
                        acao = 'U';
                            
                    } else if (output instanceof com.sys.Message) {
                            
                        com.sys.Message mensagem = (com.sys.Message) output;
                        javax.swing.JOptionPane.showMessageDialog(this, mensagem.getMessage(), "CadHab", mensagem.getCode());
                            
                    }
                        
                }

            }

        } catch (java.net.MalformedURLException ex) {
            
            ex.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, "N칚o foi poss칤vel encontrar um caminho at칠 o servidor!Verifique se as configura칞칫es do servidor est칚o corretas.", "CadHab", 0);
            
        } catch (java.net.ConnectException ex) {
            
            ex.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, "O servidor do CadHab est치 temporariamente fora do ar!\nTente novamente mais tarde.", "CadHab", 0);
            
        } catch (java.io.IOException ex) {
            
            ex.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, "N칚o foi poss칤vel enviar/obter as informa칞칫es para/do servidor!", "CadHab", 0);
            
        } catch (java.lang.Exception ex) {
            
            javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage(), "CadHab", 0);
            
        }
        
    }
    
    private void alterarFoto() {
        
        try {
            
            if (jlblFoto.isEnabled()) {
            
                FormBrowser form = new FormBrowser(null, true);
                form.carregarPagina(com.sys.SystemSettings.url + "/web/object" + "/upload_foto_usuario.jsp?id=" + jtblPesquisa.getModel().getValueAt(jtblPesquisa.getSelectedRow(), 0).toString() + "&auth_token=" + cadhab.CadHab.usuario.getToken() + "&auth_key=" + cadhab.CadHab.usuario.getUserKey());
                form.setVisible(true);
                
            }
            
        } catch (java.net.MalformedURLException ex) {
            
            ex.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, "N칚o foi poss칤vel encontrar um caminho at칠 o servidor!Verifique se as configura칞칫es do servidor est칚o corretas.", "CadHab", 0);
            
        } catch (java.net.ConnectException ex) {
            
            ex.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, "O servidor do CadHab est치 temporariamente fora do ar!\nTente novamente mais tarde.", "CadHab", 0);
            
        } catch (java.io.IOException ex) {
            
            ex.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, "N칚o foi poss칤vel enviar/obter as informa칞칫es para/do servidor!", "CadHab", 0);
            
        } catch (java.lang.Exception ex) {
            
            javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage(), "CadHab", 0);
            
        }
        
    }
    
    private void atalho(java.awt.event.KeyEvent evt) {
        
        if (evt.isControlDown()) {
        
            switch (evt.getKeyCode()) {
                
                case java.awt.event.KeyEvent.VK_D: {
                    if (acao == 'U')
                        excluir();
                }
                    break;
                    
                case java.awt.event.KeyEvent.VK_E: {
                    if (acao == 'U')
                        editar();
                }
                    break;
                    
                case java.awt.event.KeyEvent.VK_L: {
                    if (acao == 'N' || acao == 'U')
                        limparCampos();
                }
                    break;

                case java.awt.event.KeyEvent.VK_N: {
                    criarNovo();
                }
                    break;
                    
                case java.awt.event.KeyEvent.VK_S: {
                    if (acao == 'N')
                        salvar();
                }
                    break;

            }
        
        } else {
            
            switch (evt.getKeyCode()) {
                
                case java.awt.event.KeyEvent.VK_ESCAPE: {
                    resetarForm();
                    this.doDefaultCloseAction();
                }
                    break;
                    
                case java.awt.event.KeyEvent.VK_F2: {
                    pesquisar();
                }
                    break;
                
                case java.awt.event.KeyEvent.VK_F5: {
                    preencherTabelaPesquisa();
                }
                    break;
                    
                case java.awt.event.KeyEvent.VK_F6: {
                    carregarDados();
                }
                    break;
                
            }
            
        }
        
    }
    
    private void limparCampos() {
        
        jtxtUsuario.setText("");
        jpwdSenha.setText("");
        jpwdConfirmeSenha.setText("");
        jtxtEmail.setText("");
        jtxtNome.setText("");
        jcbbDepartamento.setSelectedIndex(0);
        jcbbGrupo.setSelectedIndex(0);
        jcbbAtivo.setSelectedIndex(0);
        jlblFoto.setIcon(null);
        
    }
    
    private void habilitarCampos() {
        
        jtxtUsuario.setEnabled(true);
        jpwdSenha.setEnabled(true);
        jpwdConfirmeSenha.setEnabled(true);
        jtxtEmail.setEnabled(true);
        jtxtNome.setEnabled(true);
        jcbbDepartamento.setEnabled(true);
        jcbbGrupo.setEnabled(true);
        jcbbAtivo.setEnabled(true);
        jbtnAlterarSenha.setEnabled(true);
        jlblFoto.setEnabled(true);
        
    }
    
    private void desabilitarCampos() {
        
        jtxtUsuario.setEnabled(false);
        jpwdSenha.setEnabled(false);
        jpwdConfirmeSenha.setEnabled(false);
        jtxtEmail.setEnabled(false);
        jtxtNome.setEnabled(false);
        jcbbDepartamento.setEnabled(false);
        jcbbGrupo.setEnabled(false);
        jcbbAtivo.setEnabled(false);
        jbtnAlterarSenha.setEnabled(false);
        jlblFoto.setEnabled(false);
        
        
    }
    
    private void habilitarBotoes() {
        
        jbtnNovo.setEnabled(true);
        jbtnSalvar.setEnabled(true);
        jbtnEditar.setEnabled(true);
        jbtnLimpar.setEnabled(true);
        jbtnExcluir.setEnabled(true);
        
    }
    
    private void desabilitarBotoes() {
        
        jbtnNovo.setEnabled(false);
        jbtnSalvar.setEnabled(false);
        jbtnEditar.setEnabled(false);
        jbtnLimpar.setEnabled(false);
        jbtnExcluir.setEnabled(false);
        
    }
    
    private void resetarForm() {
        
        jtxtPesquisa.setText("");
        limparCampos();
        desabilitarCampos();
        desabilitarBotoes();
        jbtnNovo.setEnabled(true);
        
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jbtnAlterarSenha;
    private javax.swing.JButton jbtnEditar;
    private javax.swing.JButton jbtnExcluir;
    private javax.swing.JButton jbtnLimpar;
    private javax.swing.JButton jbtnNovo;
    private javax.swing.JButton jbtnPesquisar;
    private javax.swing.JButton jbtnSalvar;
    private javax.swing.JComboBox jcbbAtivo;
    private javax.swing.JComboBox jcbbDepartamento;
    private javax.swing.JComboBox jcbbFiltro;
    private javax.swing.JComboBox jcbbGrupo;
    private javax.swing.JLabel jlblAtivo;
    private javax.swing.JLabel jlblConfirmeSenha;
    private javax.swing.JLabel jlblDepartamento;
    private javax.swing.JLabel jlblEmail;
    private javax.swing.JLabel jlblFiltro;
    private javax.swing.JLabel jlblFoto;
    private javax.swing.JLabel jlblGrupo;
    private javax.swing.JLabel jlblNome;
    private javax.swing.JLabel jlblPesquisa;
    private javax.swing.JLabel jlblSenha;
    private javax.swing.JLabel jlblUsuario;
    private javax.swing.JPanel jpnlPrincipal;
    private javax.swing.JPanel jpnlTabelaPesquisa;
    private javax.swing.JPasswordField jpwdConfirmeSenha;
    private javax.swing.JPasswordField jpwdSenha;
    private javax.swing.JScrollPane jscpTabelaPesquisa;
    private javax.swing.JSeparator jsepRodape;
    private javax.swing.JTable jtblPesquisa;
    private javax.swing.JTextField jtxtEmail;
    private javax.swing.JTextField jtxtNome;
    private javax.swing.JTextField jtxtPesquisa;
    private javax.swing.JTextField jtxtUsuario;
    // End of variables declaration//GEN-END:variables
}
